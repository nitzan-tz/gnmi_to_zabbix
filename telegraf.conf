[[inputs.cisco_telemetry_mdt]]
   transport = "grpc"   # (one of tcp,grpc)
   service_address = ":57400"
   ## This is the way to remove fields that we dont need 
   fieldexclude = [ "ext_param_threshold*" , "ext_param_val*" , "*_threshold" , "lbc_th*", "extended_alarm_alarm_info*", 
                    "optics_alarm_info*", "ots_alarm_info*", "grey_wavelength" , "pm_enable" , "skip_snmp_pm_table",
                     "adj_ipv4bfd_retry_*", "adj_ipv6bfd_*"  ]

   #tagexclude = [ "extended_alarm_alarm_info*" , "optics_alarm_info_high*" ]
 [inputs.cisco_telemetry_mdt.aliases]
   ifstats = "ietf-interfaces:interfaces-state/interface/statistics"
   bgp_neighbors_state = "openconfig-network-instance:network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/state"
   cisco_isis_neighbors = "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/neighbors/neighbor"
   cisco_cpu_utilization = "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization"
   cisco_mem_utilization = "Cisco-IOS-XR-nto-misc-oper:memory-summary/nodes/node/summary"
   cisco_uptime = "Cisco-IOS-XR-shellutil-oper:system-time/uptime"
   cisco_interface_sum = "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-summary"
   cisco_interface = "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters"
   cisco_isis_adj = "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/levels/level/adjacencies/adjacency"
   cisco_isis_adj_count = "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/interfaces/interface"
   cisco_optics = "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info"
   cisco_ncs_npu = "Cisco-IOS-XR-platforms-ofa-oper:ofa/stats/nodes/node/Cisco-IOS-XR-NCS-BDplatforms-npu-resources-oper:hw-resources-datas/hw-resources-data"
   cisco_env = "Cisco-IOS-XR-envmon-oper:environmental-monitoring/rack/nodes/node/sensor-types/sensor-type/sensor-names/sensor-name"

#[[outputs.file]]
#  ## Files to write to, "stdout" is a specially handled file.
#  files = ["stdout", "/tmp/metrics.out"]
#
#  ## Data format to output.
#  ## Each data format has its own unique set of configuration options, read
#  ## more about them here:
#  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
#  data_format = "json"
#
#  ## The resolution to use for the metric timestamp.  Must be a duration string
#  ## such as "1ns", "1us", "1ms", "10ms", "1s".  Durations are truncated to
#  ## the power of 10 less than the specified units.
#  json_timestamp_units = "1s"



#[[outputs.prometheus_client]]
  # Address to listen on
#  listen = "127.0.0.1:9273"

  # Expiration interval for each metric. 0 == no expiration
#  expiration_interval = "180s"

#  metric_version = 2
